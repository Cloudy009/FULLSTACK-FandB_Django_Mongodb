# Generated by Django 3.1.12 on 2025-05-06 08:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('cate_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image_cat', models.CharField(max_length=200)),
                ('detail', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], default='S', max_length=5)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('sugar', models.CharField(blank=True, max_length=50, null=True)),
                ('ice', models.CharField(blank=True, max_length=50, null=True)),
                ('tea', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'home_detail',
            },
        ),
        migrations.CreateModel(
            name='HoaDon',
            fields=[
                ('maHoaDon', models.AutoField(primary_key=True, serialize=False)),
                ('tongTien', models.DecimalField(decimal_places=2, max_digits=10)),
                ('email', models.EmailField(max_length=50)),
                ('diaChi', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Chờ xác nhận'), ('processing', 'Đang chuẩn bị'), ('shipped', 'Đang giao hàng'), ('delivered', 'Đã giao hàng'), ('cancelled', 'Đã hủy'), ('failed', 'Thất bại')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('credit', 'Thẻ tín dụng/Ghi nợ'), ('paypal', 'Paypal'), ('cod', 'Thanh toán khi nhận hàng')], default='cod', max_length=10)),
                ('is_received', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'home_hoadon',
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('return', 'Chính sách đổi/trả'), ('delivery', 'Chính sách giao hàng'), ('payment', 'Chính sách thanh toán'), ('privacy', 'Chính sách bảo mật thông tin'), ('storage', 'Chính sách bảo quản thực phẩm'), ('promotion', 'Chính sách khuyến mãi'), ('cancel', 'Chính sách hủy đơn hàng')], max_length=20, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('pro_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('sku', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('tags', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('material', models.TextField(blank=True, null=True)),
                ('storage_instruction', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('categories', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image_pro', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.category')),
            ],
            options={
                'db_table': 'home_product',
            },
        ),
        migrations.CreateModel(
            name='ShopInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('website', models.URLField()),
                ('is_open_weekend', models.BooleanField(default=True)),
                ('ship_available', models.BooleanField(default=True)),
                ('email', models.EmailField(max_length=50)),
                ('zalo_link', models.URLField()),
                ('facebook_link', models.URLField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_spend', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField()),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.detail')),
                ('hoadon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.hoadon')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'home_review',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=200)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product')),
            ],
            options={
                'db_table': 'home_productimage',
            },
        ),
        migrations.CreateModel(
            name='OrderEvent',
            fields=[
                ('maEvent', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Chờ xác nhận'), ('processing', 'Đang chuẩn bị'), ('shipped', 'Đang giao hàng'), ('delivered', 'Đã giao hàng'), ('cancelled', 'Đã hủy'), ('failed', 'Thất bại')], default='pending', max_length=20)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='home.hoadon')),
            ],
            options={
                'db_table': 'home_orderevent',
                'ordering': ['time'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='hoadon',
            name='voucher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.voucher'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('mess_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=50)),
                ('phone_number', models.IntegerField()),
                ('message', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'home_feedback',
            },
        ),
        migrations.AddField(
            model_name='detail',
            name='hoaDon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.hoadon'),
        ),
        migrations.AddField(
            model_name='detail',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], default='S', max_length=5)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('sugar', models.CharField(choices=[('low', 'Ít'), ('normal', 'Bình thường'), ('high', 'Nhiều')], default='normal', max_length=10)),
                ('tea', models.CharField(choices=[('low', 'Ít'), ('normal', 'Bình thường'), ('high', 'Nhiều')], default='normal', max_length=10)),
                ('ice', models.CharField(choices=[('low', 'Ít'), ('normal', 'Bình thường'), ('high', 'Nhiều')], default='normal', max_length=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'home_cartitem',
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], max_length=5)),
                ('price', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product')),
            ],
            options={
                'db_table': 'home_productsize',
                'unique_together': {('product', 'size')},
            },
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(fields=('user', 'product'), name='unique_user_product_like'),
        ),
        migrations.AlterUniqueTogether(
            name='detail',
            unique_together={('hoaDon', 'product', 'size')},
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('user', 'product', 'size')},
        ),
    ]
